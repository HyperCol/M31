oldHandLight=false
vignette=false
oldLighting=false
separateAo=false
dynamicHandLight=false

sliders=TAA_Post_Processing_Sharpeness TAA_Post_Processing_Sharpen_Limit Average_Exposure_PerFrame_Weight Stars_Fade_In Stars_Fade_Out \
Camera_ISO Camera_Exposure_Value Camera_Exposure_Delay Camera_Shutter_Speed Camera_Exposure_Min_EV Camera_Exposure_Max_EV Bloom_Intensity Stars_Luminance Stars_Visible \
Stars_Speed Camera_Focal_Distance Camera_Aperture Camera_Aperture Camera_Focal_Length Moon_Texture_Luminance Moon_Radius Moon_Distance Planet_Angle Bloom_Exposure_Value \
Sky_Light_Level_Min Soft_Shadow_Penumbra Blocks_Light_Color_Temperture Blocks_Light_Color_R Blocks_Light_Color_G Blocks_Light_Color_B Blocks_Light_Intensity \
Rayleigh_Scattering Rayleigh_Absorption Rayleigh_Transmittance_R Rayleigh_Transmittance_G Rayleigh_Transmittance_B Rayleigh_Distribution \
Mie_Scattering Mie_Absorption Mie_Transmittance_R Mie_Transmittance_G Mie_Transmittance_B Mie_Distribution Small_SlimeBlock_Density Small_HoneyBlock_Density \
Land_Atmospheric_Distribution Land_Atmospheric_Density

screen=<empty> <empty> <empty> <empty> [Camera_Setting] [Camera_Depth_of_Field] [Antialiasing] <empty> [Sun_Light_Setting] [Ambient_Light_Setting] [Blocks_Light_Setting] <empty> [Atmosphere] [Land_Atmosphere] [Night_Sky] 

screen.Camera_Setting=<empty> <empty> <empty> <empty> Camera_ISO Camera_Average_Exposure Camera_Exposure_Value <empty> Camera_Exposure_Min_EV Bloom_Exposure_Value Camera_Exposure_Max_EV Bloom_Intensity_Test <empty> <empty> Camera_FPS <empty> Camera_Shutter_Speed
screen.Camera_Depth_of_Field=<empty> <empty> <empty> <empty> Camera_DOF <empty> <empty> <empty> Camera_Aperture Camera_Focal_Distance_Auto Camera_Focal_Length Camera_Focal_Distance

screen.Antialiasing=<empty> <empty> <empty> <empty> Enabled_TAA <empty> <empty> <empty> TAA_Post_Processing_Sharpeness TAA_Post_Processing_Sharpen_Limit <empty> <empty> TAA_No_Clip

screen.Sun_Light_Setting=<empty> <empty> <empty> <empty> Soft_Shadow_Quality Soft_Shadow_Penumbra
screen.Ambient_Light_Setting=<empty> <empty> <empty> <empty> SSAO_Quality <empty> <empty> <empty> Disabled_Sky_Occlusion Sky_Light_Level_Min
screen.Blocks_Light_Setting=<empty> <empty> <empty> <empty> Blocks_Light_Color Blocks_Light_Color_R Blocks_Light_Intensity Blocks_Light_Color_G Blocks_Light_Color_Temperture Blocks_Light_Color_B <empty> <empty> SSAO_Quality <empty> <empty> <empty> Held_Light_Quality
screen.Lighting_Setting=<empty> <empty> <empty> <empty> Sun_Light_Luminance Moon_Light_Luminance Mie_Density Rayleigh_Density <empty> <empty> Blocks_Light_Luminance Blocks_Light_Color_Temperture <empty> <empty> Nature_Light_Min_Luminance

screen.Atmosphere=Atmosphere_Profile <empty> <empty> <empty> Rayleigh_Transmittance_R Rayleigh_Scattering Rayleigh_Transmittance_G Rayleigh_Transmittance_G Rayleigh_Absorption Rayleigh_Transmittance_B Rayleigh_Distribution <empty> <empty> Mie_Transmittance_R Mie_Scattering Mie_Transmittance_G Mie_Transmittance_G Mie_Absorption Mie_Transmittance_B Mie_Distribution
screen.Land_Atmosphere=<empty> <empty> <empty> <empty> Land_Atmospheric_Scattering_Quality <empty> <empty> <empty> Land_Atmospheric_Density Land_Atmospheric_Distribution
screen.Night_Sky=<empty> <empty> <empty> <empty> Moon_Texture_Luminance Stars_Luminance Moon_Radius Stars_Visible Moon_Distance Stars_Speed <empty> Planet_Angle <empty> Stars_Fade_In <empty> Stars_Fade_Out

variable.float.upPositionNormalized=1.0 / sqrt((upPosition.x*upPosition.x) + (upPosition.y*upPosition.y) + (upPosition.z*upPosition.z))
variable.float.sunPositionNormalized=1.0 / sqrt((sunPosition.x*sunPosition.x) + (sunPosition.y*sunPosition.y) + (sunPosition.z*sunPosition.z))
variable.float.moonPositionNormalized=1.0 / sqrt((moonPosition.x*moonPosition.x) + (moonPosition.y*moonPosition.y) + (moonPosition.z*moonPosition.z))
variable.float.lightPositionNormalized=1.0 / sqrt((shadowLightPosition.x*shadowLightPosition.x) + (shadowLightPosition.y*shadowLightPosition.y) + (shadowLightPosition.z*shadowLightPosition.z))

variable.float.sunVectorWorldX=gbufferModelViewInverse.0.0 * sunPosition.x + gbufferModelViewInverse.1.0 * sunPosition.y + gbufferModelViewInverse.2.0 * sunPosition.z
variable.float.sunVectorWorldY=gbufferModelViewInverse.0.1 * sunPosition.x + gbufferModelViewInverse.1.1 * sunPosition.y + gbufferModelViewInverse.2.1 * sunPosition.z
variable.float.sunVectorWorldZ=gbufferModelViewInverse.0.2 * sunPosition.x + gbufferModelViewInverse.1.2 * sunPosition.y + gbufferModelViewInverse.2.2 * sunPosition.z

variable.float.moonVectorWorldX=gbufferModelViewInverse.0.0 * moonPosition.x + gbufferModelViewInverse.1.0 * moonPosition.y + gbufferModelViewInverse.2.0 * moonPosition.z
variable.float.moonVectorWorldY=gbufferModelViewInverse.0.1 * moonPosition.x + gbufferModelViewInverse.1.1 * moonPosition.y + gbufferModelViewInverse.2.1 * moonPosition.z
variable.float.moonVectorWorldZ=gbufferModelViewInverse.0.2 * moonPosition.x + gbufferModelViewInverse.1.2 * moonPosition.y + gbufferModelViewInverse.2.2 * moonPosition.z

variable.float.lightVectorWorldX=gbufferModelViewInverse.0.0 * shadowLightPosition.x + gbufferModelViewInverse.1.0 * shadowLightPosition.y + gbufferModelViewInverse.2.0 * shadowLightPosition.z
variable.float.lightVectorWorldY=gbufferModelViewInverse.0.1 * shadowLightPosition.x + gbufferModelViewInverse.1.1 * shadowLightPosition.y + gbufferModelViewInverse.2.1 * shadowLightPosition.z
variable.float.lightVectorWorldZ=gbufferModelViewInverse.0.2 * shadowLightPosition.x + gbufferModelViewInverse.1.2 * shadowLightPosition.y + gbufferModelViewInverse.2.2 * shadowLightPosition.z

uniform.vec3.upVector=vec3(upPosition.x * upPositionNormalized, upPosition.y * upPositionNormalized, upPosition.z * upPositionNormalized)
uniform.vec3.sunVector=vec3(sunPosition.x * sunPositionNormalized, sunPosition.y * sunPositionNormalized, sunPosition.z * sunPositionNormalized)
uniform.vec3.moonVector=vec3(moonPosition.x * moonPositionNormalized, moonPosition.y * moonPositionNormalized, moonPosition.z * moonPositionNormalized)
uniform.vec3.lightVector=vec3(shadowLightPosition.x * lightPositionNormalized, shadowLightPosition.y * lightPositionNormalized, shadowLightPosition.z * lightPositionNormalized)

uniform.vec3.worldUpVector=vec3(0.0, 1.0, 0.0)
uniform.vec3.worldSunVector=vec3(sunVectorWorldX * sunPositionNormalized, sunVectorWorldY * sunPositionNormalized, sunVectorWorldZ * sunPositionNormalized)
uniform.vec3.worldMoonVector=vec3(moonVectorWorldX * moonPositionNormalized, moonVectorWorldY * moonPositionNormalized, moonVectorWorldZ * moonPositionNormalized)
uniform.vec3.worldLightVector=vec3(lightVectorWorldX * lightPositionNormalized, lightVectorWorldY * lightPositionNormalized, lightVectorWorldZ * lightPositionNormalized)

uniform.vec4.gbufferProjection0=vec4(gbufferProjection.0.0, gbufferProjection.1.0, gbufferProjection.2.0, gbufferProjection.3.0)
uniform.vec4.gbufferProjection1=vec4(gbufferProjection.0.1, gbufferProjection.1.1, gbufferProjection.2.1, gbufferProjection.3.1)
uniform.vec4.gbufferProjection2=vec4(gbufferProjection.0.2, gbufferProjection.1.2, gbufferProjection.2.2, gbufferProjection.3.2)
uniform.vec4.gbufferProjection3=vec4(gbufferProjection.0.3, gbufferProjection.1.3, gbufferProjection.2.3, gbufferProjection.3.3)

variable.int.frameIndex=frameCounter % 16
uniform.vec2.jitter=vec2(\
(if( \
frameIndex == 0 , 0.2548776662466927, \
frameIndex == 1 , 0.009755332493385449, \
frameIndex == 2 , 0.764632998740078, \
frameIndex == 3 , 0.5195106649867709, \
frameIndex == 4 , 0.27438833123346384, \
frameIndex == 5 , 0.029265997480155903, \
frameIndex == 6 , 0.7841436637268488, \
frameIndex == 7 , 0.5390213299735418, \
frameIndex == 8 , 0.29389899622023474, \
frameIndex == 9 , 0.04877666246692769, \
frameIndex == 10, 0.8036543287136197, \
frameIndex == 11, 0.5585319949603118, \
frameIndex == 12, 0.31340966120700564, \
frameIndex == 13, 0.0682873274536977, \
frameIndex == 14, 0.8231649937003915, \
0.5780426599470836) * 2.0 - 1.0) / viewWidth, \
(if( \
frameIndex == 0 , 0.06984029099805333, \
frameIndex == 1 , 0.6396805819961064, \
frameIndex == 2 , 0.20952087299415956, \
frameIndex == 3 , 0.7793611639922129, \
frameIndex == 4 , 0.3492014549902662, \
frameIndex == 5 , 0.9190417459883191, \
frameIndex == 6 , 0.48888203698637245, \
frameIndex == 7 , 0.05872232798442578, \
frameIndex == 8 , 0.6285626189824791, \
frameIndex == 9 , 0.19840290998053245, \
frameIndex == 10, 0.7682432009785858, \
frameIndex == 11, 0.33808349197663823, \
frameIndex == 12, 0.9079237829746916, \
frameIndex == 13, 0.4777640739727449, \
frameIndex == 14, 0.04760436497079823, \
0.6174446559688516) * 2.0 - 1.0) / viewHeight)

texture.deferred.depthtex2=minecraft:textures/environment/moon_phases.png
scale.deferred=0.5

program.world0/composite6.enabled=Camera_DOF

program.world0/composite1.enabled=false

scale.composite8=0.5
scale.composite9=0.5

#rain.depth=true
#beacon.beam.depth=true

blend.gbuffers_basic=ONE ZERO ONE ZERO
blend.gbuffers_textured=ONE ZERO ONE ZERO
blend.gbuffers_textured_lit=ONE ZERO ONE ZERO
blend.gbuffers_terrain=ONE ZERO ONE ZERO
blend.gbuffers_damagedblock=ONE ZERO ONE ZERO
blend.gbuffers_beaconbeam=ONE ZERO ONE ZERO
blend.gbuffers_entities=ONE ZERO ONE ZERO
blend.gbuffers_entities_glowing=ONE ZERO ONE ZERO
blend.gbuffers_armor_glint=ONE ZERO ONE ZERO
blend.gbuffers_spidereyes=ONE ZERO ONE ZERO
blend.gbuffers_hand=ONE ZERO ONE ZERO
blend.gbuffers_weather=ONE ZERO ONE ZERO
blend.gbuffers_water=SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
blend.gbuffers_hand_water=ONE ZERO ONE ZERO

backFace.translucent=true